https://www.mediafire.com/file/ce25suxmb6tkyf2/Archive.zip/file
https://www.mediafire.com/file/rpjnyrql8r686gf/Archive+(1).zip/file
https://www.mediafire.com/file/9qfj8gsqs16ba1s/Roblox-Realistic-Forest-Demo.rbxl/file
https://www.mediafire.com/file/ji4wthakv28itb9/Archive+(2).zip/file
https://www.mediafire.com/file/yi72lwedqwtb3gw/qr.zip/file
https://www.mediafire.com/file/alh0h14z6wipbkf/unk.zip/file
https://www.mediafire.com/file/b44i3b162ug3d8t/aa.zip/file
https://www.roblox.com/games/16073932423/THE-ARCTIC-OPEN-SOURCE
https://www.roblox.com/games/8476760641/Warehouse-OPEN-SOURCE
https://www.mediafire.com/file/ya8zk4twp07anzc/Litex,+Crimea.rbxl/file
https://www.mediafire.com/file/c43bpt4n5zmu1dx/bf.zip/file
https://www.roblox.com/games/111139075456386/Server-Authoritative-Soccer-System

https://www.mediafire.com/file/gquj0ny4r87to3q/DBZ.zip/file
https://www.mediafire.com/file/rdguxbqfmf47xuz/Global+Leaks+Vaelin.rbxl/file
https://www.mediafire.com/file/2mdc4asw9zsdftm/FX.zip/file


-- Ultra-Secure Admin Executor v4.1 (Roblox Studio Only)
-- Place in ServerScriptService

local ADMIN_WHITELIST = {123456789} -- Replace with admin UserIds
local COMMAND_PREFIX = "in/"
local MAX_ATTEMPTS = 2
local BAN_REASON = "Unauthorized execution attempts"

local Players = game:GetService("Players")
local violationCounts = {}

-- Security Layer 1: Whitelist Verification
local function isAuthorized(player)
    return table.find(ADMIN_WHITELIST, player.UserId) ~= nil
end

-- Security Layer 2: Safe Code Execution
local function executeAdminCode(player, code)
    -- Create isolated environment
    local env = getfenv()
    local sandbox = setmetatable({
        script = script,
        require = require,
        game = game,
        workspace = workspace,
        Instance = Instance,
        loadstring = loadstring,
        warn = function(...)
            warn("[ADMIN OUTPUT]", player.Name, ...)
        end
    }, {
        __index = env,
        __newindex = function(t, k, v)
            rawset(env, k, v)
        end
    })

    -- Compile code
    local chunk, syntaxError = loadstring(code, "AdminCommand")
    if not chunk then
        warn("[SYNTAX ERROR]", player.Name, syntaxError)
        return
    end

    -- Execute in sandbox
    setfenv(chunk, sandbox)
    local success, runtimeError = pcall(chunk)
    if not success then
        warn("[RUNTIME ERROR]", player.Name, runtimeError)
    end
end

-- Security Layer 3: Violation System
local function handleViolation(player)
    if isAuthorized(player) then return end -- Don't track admins
    
    violationCounts[player] = (violationCounts[player] or 0) + 1
    
    if violationCounts[player] >= MAX_ATTEMPTS then
        player:Kick(BAN_REASON)
        warn("[SECURITY] Banned", player.Name, "Reason:", BAN_REASON)
    else
        warn("[SECURITY] Warning", violationCounts[player], "for", player.Name)
    end
end

-- Command Handler
Players.PlayerChatted:Connect(function(_, player, message)
    if message:sub(1, #COMMAND_PREFIX) == COMMAND_PREFIX then
        if isAuthorized(player) then
            local code = message:sub(#COMMAND_PREFIX + 1)
            executeAdminCode(player, code)
        else
            handleViolation(player)
        end
    end
end)

warn("Admin security system initialized")
