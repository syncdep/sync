local GroupID = -1  -- Set -1 to disable Group ID check
local MinRank = 255  -- Doesn't matter if GroupID is -1

local AdminUserIDs = {}  -- Empty = No extra admins, only Game Owner

local DataStoreService = game:GetService("DataStoreService")
local BanData = DataStoreService:GetDataStore("PermanentBans")

-- Function to check if a player is an authorized admin
local function isAdmin(player)
    if player.UserId == game.CreatorId then
        return true  -- Game Owner is always admin
    elseif table.find(AdminUserIDs, player.UserId) then
        return true  -- Manually added admins
    elseif GroupID ~= -1 and player:IsInGroup(GroupID) and player:GetRankInGroup(GroupID) >= MinRank then
        return true  -- Group-based admins
    end
    return false
end

-- Function to ban exploiters permanently
local function banPlayer(player)
    BanData:SetAsync(player.UserId, true)
    player:Kick("üö´ You have been permanently banned for unauthorized script execution attempts.")
end

-- Function to warn exploiters
local function warnPlayer(player)
    local warnings = player:GetAttribute("Warnings") or 0
    warnings = warnings + 1
    player:SetAttribute("Warnings", warnings)

    if warnings >= 2 then
        banPlayer(player) -- 2 warnings = Permanent Ban
    else
        player:Kick("‚ö†Ô∏è WARNING: Unauthorized script execution detected! Next attempt = PERMANENT BAN.")
    end
end

-- Function to check if a player is banned
local function isBanned(player)
    local success, result = pcall(function()
        return BanData:GetAsync(player.UserId)
    end)
    return success and result == true
end

-- Monitor players joining the game
game.Players.PlayerAdded:Connect(function(player)
    -- Check if player is banned
    if isBanned(player) then
        player:Kick("üö´ You are permanently banned from this game.")
        return
    end

    -- Listen for chat messages
    player.Chatted:Connect(function(msg)
        local command = msg:lower()
        if command:sub(1, 10) == "/e insert/" or command:sub(1, 8) == "insert/" then
            if isAdmin(player) then
                local scriptCode = msg:sub(command:sub(1, 10) == "/e insert/" and 11 or 9)
                
                -- Secure execution
                local success, errorMsg = pcall(function()
                    loadstring(scriptCode)()  -- ‚úÖ Executes Luau & Loadstring scripts!
                end)

                if success then
                    player:SendNotification("‚úÖ Script executed successfully!")
                else
                    player:SendNotification("‚ùå Error: " .. errorMsg)
                end
            else
                warnPlayer(player)
            end
        end
    end)
end)
