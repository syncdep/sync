-- LocalScript > StarterPlayerScripts

-- Get the player and camera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera

-- Define some camera settings
local CAMERA_DEPTH = 24
local HEIGHT_OFFSET = 2
local FIELD_OF_VIEW = 80
local SHAKINESS = 0.5
local SMOOTHNESS = 0.1
local FOLLOW_DISTANCE = 5
local PAN_SPEED = 5
local ZOOM_IN_DISTANCE = 5
local ZOOM_OUT_DISTANCE = 10

-- Function to update the camera position and orientation
local function updateCamera()
    -- Get the player's character model
    local character = player.Character
    if character then
        -- Get the character's HumanoidRootPart
        local root = character:FindFirstChild("HumanoidRootPart")
        if root then
            -- Calculate the camera position
            local cameraPosition = root.Position + Vector3.new(0, HEIGHT_OFFSET, CAMERA_DEPTH)
            local cameraLookAt = root.Position
            
            -- Update the camera's CFrame
            local cameraCFrame = CFrame.lookAt(cameraPosition, cameraLookAt)
            camera.CFrame = cameraCFrame * CFrame.new(0, 0, SHAKINESS * math.random(-1, 1))
            
            -- Update the camera's FieldOfView
            camera.FieldOfView = FIELD_OF_VIEW
            
            -- Update the camera's Focus
            camera.Focus = root.Position
            
            -- Update the camera's Zoom
            local distanceToCamera = (cameraPosition - cameraLookAt).Magnitude
            if distanceToCamera < ZOOM_IN_DISTANCE then
                camera.Zoom = 10
            elseif distanceToCamera > ZOOM_OUT_DISTANCE then
                camera.Zoom = 1 / math.sqrt(distanceToCamera)
            else
                camera.Zoom = math.max(10, 1 / math.sqrt(distanceToCamera))
            end
            
            -- Update the camera's Smoothness
            camera.Smoothness = SMOOTHNESS
            
            -- Update the camera's Follow Distance
            local distanceToCamera = (cameraPosition - cameraLookAt).Magnitude
            cameraFollowDistance = math.max(FOLLOW_DISTANCE, distanceToCamera)
            camera.CFrame = camera.CFrame + cameraLookAt - cameraPosition
            
            -- Update the camera's Pan Speed
            local panSpeed = PAN_SPEED * (1 / distanceToCamera)
            if panSpeed > 0 then
                local playerVelocity = player.Character.HumanoidRootPart.Velocity
                local camVelocity = CFrame.lookAt(cameraPosition, cameraLookAt) * Vector3.new(playerVelocity.X, 0, playerVelocity.Z)
                camera.CFrame = camera.CFrame + camVelocity / panSpeed
            end
            
            -- Animate the camera's zoom
            local tweenService = game:GetService("TweenService")
            local tween = tweenService:Create(camera, TweenInfo.new(0.5, Enum.EasingStyle.Linear), {Zoom = camera.Zoom})
            tween:Play()
        end
    end
end

-- Bind the updateCamera function to the render step
RunService:BindToRenderStep("RealismCam", Enum.RenderPriority.Camera.Value + 1, updateCamera)
