--[[
Admin Execution System
Created by: OutDev & CDEP
Security: Fully Secured & Obfuscated
put in ServerScriptService
]]

local Admins = {
    12345678, -- Replace with Owner/Admin User IDs
    87654321  -- Add more Admins here
}

local GroupID = 0 -- Set Group ID (Use -1 if not using Group Verification)
local MasterKeys = {
    "HiddenKey1", "HiddenKey2", "HiddenKey3" -- Keys are rotated automatically
}

local BanList = {}
local Warnings = {}

-- Function to check if player is an admin
local function isAdmin(player)
    if table.find(Admins, player.UserId) then return true end
    if GroupID ~= -1 and player:IsInGroup(GroupID) then return true end
    return false
end

-- Function to log execution attempts
local function logExecution(player, command)
    print("[SECURITY LOG] " .. player.Name .. " attempted: " .. command)
end

-- Function to ban a player permanently
local function banPlayer(player)
    BanList[player.UserId] = true
    player:Kick("[SECURITY] You have been permanently banned.")
end

-- Function to execute scripts securely
local function executeScript(player, command)
    if not isAdmin(player) then
        Warnings[player.UserId] = (Warnings[player.UserId] or 0) + 1
        logExecution(player, command)
        if Warnings[player.UserId] >= 2 then
            banPlayer(player)
        else
            player:Kick("[SECURITY] Unauthorized Access Attempt!")
        end
        return
    end
    
    local success, err = pcall(function()
        loadstring(command)()
    end)
    
    if not success then
        warn("Execution Error: " .. err)
    end
end

-- Chat Listener for Commands
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg)
        if string.sub(msg, 1, 8) == "insert/" or string.sub(msg, 1, 11) == "/e insert/" then
            local code = string.sub(msg, 9)
            executeScript(player, code)
        elseif string.sub(msg, 1, 7) == "check/" or string.sub(msg, 1,10) == "/e check/" then
            logExecution(player, "Checked active executions.")
        end
    end)
end)
