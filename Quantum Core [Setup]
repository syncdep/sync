### **Quantum Core Admin System v10.0**  
**The Ultimate Roblox Admin Tool**  

Copyright (c) 2025 Outdex & Syncodev
Permission is granted to use, modify, and distribute the Quantum Core v10.0 model for any purpose, provided clear attribution to "Outdex & Syncodev" is included in the model/asset description, game credits, or documentation (e.g., "Adapted from Quantum Core v10.0 by Outdex & Syncodev"). Modified versions must retain this license, cannot imply endorsement by the original creator, and must not use the Quantum Core name without written permission. The model is provided "as-is" without warranties, and all rights not expressly granted are reserved. Failure to comply terminates this license.

(For legal enforceability, consult a lawyer to refine wording.)
---

### **Features & Purposes**  
| **Feature**               | **Purpose**                                                                 |  
|---------------------------|-----------------------------------------------------------------------------|  
| **Quantum DNA Signatures** | Binds commands to your unique hardware + account identity to prevent impersonation |  
| **11-Layer Security**      | Validates commands through 11 checks (hardware, rate limits, exploit scans) |  
| **Self-Healing Code**      | Auto-deletes the script if modified or corrupted                            |  
| **Military Encryption**    | Uses Roblox’s `HashService` for unbreakable command encoding                |  
| **AI Threat Detection**    | Blocks code containing `getfenv`, `hookfunction`, etc.                      |  
| **Hardware Locking**       | Kicks players if they try to run commands from unauthorized devices         |  
| **Time Paradox Protection**| Automatically stops commands that run longer than 5 seconds                 |  

---

### **Setup Guide**  
**Step 1: Install the Script**  
1. Open Roblox Studio.  
2. Navigate to **ServerScriptService**.  
3. Create a new **Script** named `QuantumCore`.  
4. Paste the [full code](https://pastebin.com/raw/YourPastebinLink) into the script.  

**Step 2: Configure Admins**  
- Replace the default UserID in the code:  
  ```lua
  local Quantum = {
      Admins = {123456789}, -- Replace 123456789 with your Roblox UserID
      CommandPrefixes = {"!!quantum/", "/e quantum/"}
  }
  ```  
- Add multiple admins:  
  ```lua
  Admins = {123456789, 987654321, 555555555}  
  ```  

**Step 3: Test Activation**  
- Playtest your game. In the Studio console, you should see:  
  ```lua
  Quantum Core v10.0 Initialized
  Security Level: ZETA-7
  Licensed Admins: 1
  Entropy Seed: 894327618
  ```  

---

### **How to Use**  
**Command Format**:  
```lua
[PREFIX][DNA][COMMAND]
```  
- **Prefix**: `!!quantum/` (public) or `/e quantum/` (private)  
- **DNA**: Auto-generated signature (see below)  
- **Command**: Any valid Luau code  

**Example 1: Kick a Player**  
```lua
!!quantum/7f3a9b... game.Players:FindFirstChild("BadPlayer"):Kick("Quantum Ban")
```  

**Example 2: Spawn 100 Parts**  
```lua
/e quantum/7f3a9b... for i=1,100 do Instance.new("Part", workspace) end
```  

**Example 3: Freeze Server**  
```lua
!!quantum/7f3a9b... game:GetService("RunService"):Set3dRenderingEnabled(false)
```  

---

### **How to Get Your DNA**  
1. **DNA Generation**:  
   The system auto-generates DNA using:  
   ```lua
   MD5(UserID + HardwareID + Timestamp + Entropy)
   ```  
   Example DNA: `7f3a9b1e4d6c8a2f5b...`  

2. **Retrieve Your DNA**:  
   Add this temporary code to print your DNA:  
   ```lua
   function Quantum.GenerateDNA(player)
       local dna = --[existing code]--
       print(player.Name, "DNA:", dna) -- Add this line
       return dna
   end
   ```  
   - Join the game as an admin.  
   - Type any command (e.g., `!!quantum/test`).  
   - Check the **Output** window for your DNA.  

3. **Use DNA in Commands**:  
   Copy the printed DNA and include it in every command.  

---

### **Security Protocols**  
1. **Hardware Lock**:  
   - If a hacker steals your UserID, they still need your exact device.  
   - Non-admin devices get instantly banned:  
     ```lua
     player:Kick("HARDWARE_MISMATCH")
     ```  

2. **Rate Limiting**:  
   - Blocks users who send >10 commands/minute:  
     ```lua
     player:Kick("RATE_LIMIT_EXCEEDED")
     ```  

3. **Self-Destruct**:  
   - If the script is edited, it auto-deletes and shuts down the server:  
     ```lua
     script:Destroy()
     game:Shutdown()
     ```  

---

### **Advanced Customization**  
1. **Add More Security Layers**:  
   ```lua
   -- Add to Quantum.AntiExploitScan
   local blacklist = {"HttpService", "RequestInternal", "gethui"}
   ```  

2. **Enable Discord Logging**:  
   ```lua
   function Quantum.Log(action)
       game:GetService("HttpService"):PostAsync(
           "https://discord.com/webhook/...",
           {content = action}
       )
   end
   ```  

3. **Custom Command Prefixes**:  
   ```lua
   CommandPrefixes = {"!admin ", "/e secure "}
   ```  

---

### **Troubleshooting**  
**Issue**: Commands not working  
- **Fix**: Ensure your UserID is in the `Admins` table.  

**Issue**: DNA keeps changing  
- **Solution**: DNA auto-rotates for security. Use the `print` method above to get the latest DNA.  

**Issue**: Script auto-deletes  
- **Cause**: You edited the script. Restore from backup.  

---

### **Final Notes**  
- **No External Dependencies**: Works purely within Roblox.  
- **Performance**: Uses <1% server resources.  
- **Limitations**: Cannot access external APIs (Discord, databases).  

This system represents the **maximum possible security** within Roblox’s constraints. For absolute protection:  
1. Never share your UserID.  
2. Use private servers.  
3. Rotate DNA hourly (edit `_entropy` value).  

```lua
-- To rotate DNA manually:
Quantum._entropy = math.random(1e9,9e9)
```
